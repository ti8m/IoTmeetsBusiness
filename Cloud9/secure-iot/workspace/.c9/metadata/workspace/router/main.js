{"filter":false,"title":"main.js","tooltip":"/router/main.js","undoManager":{"mark":43,"position":43,"stack":[[{"start":{"row":1,"column":4},"end":{"row":62,"column":6},"action":"remove","lines":["app.get('/', function(req, res) {","        console.log(\"Got a GET request for the homepage\");","","        var response = {","            msg: \"Hello GET\"","        };","        res.send(response);","","    })","","","    // This responds a POST request for the homepage","    app.post('/', function(req, res) {","        console.log(\"Got a POST request for the homepage\");","","","        // var auth = req.headers['authorization']; // auth is in base64(username:password)  so we need to decode the base64 ","        // console.log(\"Authorization Header is: \", auth);","","        // var tmp = auth.split(' '); // Split on a space, the original auth looks like  \"Basic Y2hhcmxlczoxMjM0NQ==\" and we need the 2nd part ","","        // var buf = new Buffer(tmp[1], 'base64'); // create a buffer and tell it the data coming in is base64 ","        // var plain_auth = buf.toString(); // read it back out as a string ","","        // console.log(\"Decoded Authorization \", plain_auth);","","","        // // At this point plain_auth = \"username:password\" ","","","        // var creds = plain_auth.split(':'); // split on a ':' ","        // var username = creds[0];","        // var password = creds[1];","","","        // Get body-data","        ","        var id = req.body.id;","        ","        ","        console.log(id);","","        res.send('Hello POST');","    })","","    // This responds a DELETE request for the /del_user page.","    app.delete('/del_user', function(req, res) {","        console.log(\"Got a DELETE request for /del_user\");","        res.send('Hello DELETE');","    })","","    // This responds a GET request for the /list_user page.","    app.get('/list_user', function(req, res) {","        console.log(\"Got a GET request for /list_user\");","        res.send('Page Listing');","    })","","    // This responds a GET request for abcd, abxcd, ab123cd, and so on","    app.get('/ab*cd', function(req, res) {","        console.log(\"Got a GET request for /ab*cd\");","        res.send('Page Pattern Match');","    })"],"id":529},{"start":{"row":1,"column":4},"end":{"row":45,"column":27},"action":"insert","lines":["app.get('/', function(req, res) {","    res.send('Hello! The API is at http://localhost:' + port + '/api');","});","","app.get('/setup', function(req, res) {","","  // create a sample device","  var testDevice = new Device({ ","    deviceId: '12345',","  });","","  // save the sample device","  testDevice.save(function(err) {","    if (err) throw err;","","    console.log('Device saved successfully');","    res.json({ success: true });","  });","});","","// =======================","// API Routes ============","// =======================","","// get an instance of the router for api routes","var apiRoutes = express.Router();","","// TODO: route to authenticate a user (POST http://localhost:8080/api/authenticate)","","// TODO: route middleware to verify a token","","// route to show a random message (GET http://localhost:8080/api/)","apiRoutes.get('/', function(req, res) {","  res.json({ message: 'Welcome to the coolest API on earth!' });","});","","// route to return all devices (GET http://localhost:8080/api/devices)","apiRoutes.get('/devices', function(req, res) {","  Device.find({}, function(err, devices) {","    res.json(devices);","  });","});   ","","// apply the routes to our application with the prefix /api","app.use('/api', apiRoutes);"]}],[{"start":{"row":0,"column":32},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":530},{"start":{"row":1,"column":0},"end":{"row":1,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":531}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":532}],[{"start":{"row":1,"column":0},"end":{"row":1,"column":42},"action":"insert","lines":["var Device   = require('./models/device');"],"id":533}],[{"start":{"row":1,"column":42},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":534}],[{"start":{"row":6,"column":67},"end":{"row":6,"column":68},"action":"remove","lines":["i"],"id":535}],[{"start":{"row":6,"column":66},"end":{"row":6,"column":67},"action":"remove","lines":["p"],"id":536}],[{"start":{"row":6,"column":65},"end":{"row":6,"column":66},"action":"remove","lines":["a"],"id":537}],[{"start":{"row":6,"column":64},"end":{"row":6,"column":65},"action":"remove","lines":["/"],"id":538}],[{"start":{"row":6,"column":63},"end":{"row":6,"column":65},"action":"remove","lines":["''"],"id":539}],[{"start":{"row":6,"column":62},"end":{"row":6,"column":63},"action":"remove","lines":[" "],"id":540}],[{"start":{"row":6,"column":61},"end":{"row":6,"column":62},"action":"remove","lines":["+"],"id":541}],[{"start":{"row":6,"column":60},"end":{"row":6,"column":61},"action":"remove","lines":[" "],"id":542}],[{"start":{"row":6,"column":59},"end":{"row":6,"column":60},"action":"remove","lines":["t"],"id":543}],[{"start":{"row":6,"column":58},"end":{"row":6,"column":59},"action":"remove","lines":["r"],"id":544}],[{"start":{"row":6,"column":57},"end":{"row":6,"column":58},"action":"remove","lines":["o"],"id":545}],[{"start":{"row":6,"column":14},"end":{"row":6,"column":57},"action":"remove","lines":["Hello! The API is at http://localhost:' + p"],"id":597}],[{"start":{"row":6,"column":14},"end":{"row":6,"column":15},"action":"insert","lines":["'"],"id":598}],[{"start":{"row":6,"column":14},"end":{"row":6,"column":15},"action":"insert","lines":["S"],"id":599}],[{"start":{"row":6,"column":15},"end":{"row":6,"column":16},"action":"insert","lines":["e"],"id":600}],[{"start":{"row":6,"column":16},"end":{"row":6,"column":17},"action":"insert","lines":["c"],"id":601}],[{"start":{"row":6,"column":17},"end":{"row":6,"column":18},"action":"insert","lines":["u"],"id":602}],[{"start":{"row":6,"column":18},"end":{"row":6,"column":19},"action":"insert","lines":["r"],"id":603}],[{"start":{"row":6,"column":19},"end":{"row":6,"column":20},"action":"insert","lines":["t"],"id":604}],[{"start":{"row":6,"column":19},"end":{"row":6,"column":20},"action":"remove","lines":["t"],"id":605}],[{"start":{"row":6,"column":18},"end":{"row":6,"column":19},"action":"remove","lines":["r"],"id":606}],[{"start":{"row":6,"column":18},"end":{"row":6,"column":19},"action":"insert","lines":["r"],"id":607}],[{"start":{"row":6,"column":19},"end":{"row":6,"column":20},"action":"insert","lines":["e"],"id":608}],[{"start":{"row":6,"column":20},"end":{"row":6,"column":21},"action":"insert","lines":[" "],"id":609}],[{"start":{"row":6,"column":21},"end":{"row":6,"column":22},"action":"insert","lines":["I"],"id":610}],[{"start":{"row":6,"column":22},"end":{"row":6,"column":23},"action":"insert","lines":["o"],"id":611}],[{"start":{"row":6,"column":23},"end":{"row":6,"column":24},"action":"insert","lines":["T"],"id":612}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":613}],[{"start":{"row":1,"column":0},"end":{"row":1,"column":37},"action":"insert","lines":["var express     = require('express');"],"id":614}],[{"start":{"row":1,"column":12},"end":{"row":1,"column":16},"action":"remove","lines":["    "],"id":615}],[{"start":{"row":1,"column":11},"end":{"row":1,"column":12},"action":"remove","lines":[" "],"id":616}],[{"start":{"row":1,"column":11},"end":{"row":1,"column":12},"action":"insert","lines":[" "],"id":617}],[{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"insert","lines":[" "],"id":618}],[{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"remove","lines":[" "],"id":619}],[{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"remove","lines":[" "],"id":620}],[{"start":{"row":2,"column":23},"end":{"row":2,"column":24},"action":"insert","lines":["."],"id":621}],[{"start":{"row":26,"column":0},"end":{"row":51,"column":1},"action":"remove","lines":["// =======================","// API Routes ============","// =======================","","// get an instance of the router for api routes","var apiRoutes = express.Router();","","// TODO: route to authenticate a user (POST http://localhost:8080/api/authenticate)","","// TODO: route middleware to verify a token","","// route to show a random message (GET http://localhost:8080/api/)","apiRoutes.get('/', function(req, res) {","  res.json({ message: 'Welcome to the coolest API on earth!' });","});","","// route to return all devices (GET http://localhost:8080/api/devices)","apiRoutes.get('/devices', function(req, res) {","  Device.find({}, function(err, devices) {","    res.json(devices);","  });","});   ","","// apply the routes to our application with the prefix /api","app.use('/api', apiRoutes);","}"],"id":622}],[{"start":{"row":26,"column":0},"end":{"row":26,"column":1},"action":"insert","lines":["}"],"id":623}]]},"ace":{"folds":[],"customSyntax":"javascript","scrolltop":0,"scrollleft":0,"selection":{"start":{"row":13,"column":26},"end":{"row":13,"column":26},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1464111745475,"hash":"c13be6598f866cc0cb266456d097abf9a4708538"}